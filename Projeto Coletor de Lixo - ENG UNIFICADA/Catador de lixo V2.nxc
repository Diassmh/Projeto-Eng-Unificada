//==============================================================================
//=============================================================================
//===| PROJETO ENGENHARIA UNIFICADA I  |========================================
//===|         CATADOR DE LIXO         |========================================
//===|             Q2-2024             |========================================
//===|           INTEGRANTES:          |========================================
//===|              LUCAS              |========================================
//===|             MARIANA             |========================================
//===|             MATHEUS             |========================================
//===|              TOMAS              |========================================
//==============================================================================
//==============================================================================




//Definições e variáveis =======================================================


#define longe 16                    // distancia em cm
#define motorDireita OUT_A          //Setando motor da Direita na entrada "A"
#define motorEsquerda OUT_C         //Setando motor da Esquerda na entrada "C"
#define motorEsteira OUT_B          //Setando motor da Esteira na entrada "B"
#define motores OUT_AC

#define sensor IN_1                 //Setando o sensor na entrada 1

#define proximoDe(valor, valor_referencia, margem) (abs((valor) - (valor_referencia)) <= (margem))


unsigned char distancia;            // Distancia como valor positivo.
int ultimoLado = 0;
int robo = 99;
int lado = 99;



//==============================================================================
//Função de escolha do robo ====================================================

void escolhaRobo ()
{

  until (ButtonCount(BTNCENTER, 1)){

    int maiorcondicao = 1;
    int menorcondicao = 0;

//---------------------------------------------------------------------Contador.
    if (ButtonCount(BTNRIGHT, 1)){
         robo = robo + 1;}
    else if (ButtonCount(BTNLEFT, 1)){
         robo = robo - 1;}

//---------------------------------Aplica os rob?s e os par?metros relacionados.
    if (robo == 0){ClearLine(LCD_LINE3);
         TextOut(6, LCD_LINE3, "Giro 90", 0);}
    else if (robo == 1){ClearLine(LCD_LINE3);
         TextOut(6, LCD_LINE3, "Giro Uma Roda", 0);}

         
//--Resetar o contador caso o n?mero de apertos passe o numero maximo de opções.
    else if (robo > maiorcondicao){
         robo = menorcondicao;}
    else if (robo < menorcondicao){
         robo = maiorcondicao;}

   }
}



// =============================================================================
//Função de escolher o lado que o robo ira girar primeiro (Quando ver algo)


void escolhaLado ()
{

  until (ButtonCount(BTNCENTER, 1)){

    int maiorcondicao = 2;
    int menorcondicao = 1;

    if (ButtonCount(BTNRIGHT, 1)){
         lado = lado + 1;}
    else if (ButtonCount(BTNLEFT, 1)){
         lado = lado - 1;}

    if (lado == 1){ClearLine(LCD_LINE5);
         TextOut(6, LCD_LINE5, "Direita ");}

    else if (lado == 2){ClearLine(LCD_LINE5);
         TextOut(6, LCD_LINE5, "Esquerda");}



    else if (lado > maiorcondicao){
         lado = menorcondicao;}
    else if (lado < menorcondicao){
         lado = maiorcondicao;}
   }

}







// TASK ESTEIRA
task esteira(){
 until(ButtonPressed(BTNCENTER,1)){
  OnRev(motorEsteira,0);
   }

  Wait(2000);
  OnFwd(motorEsteira,60);

}

//==============================================================================

void obtemSensores()  // distancia captada pelos sensores
{
        distancia = SensorUS(sensor);

}

void busca()// Movimenta??o quando enxergar algo
{
  if (distancia < longe){

     if ((robo == 0) && (ultimoLado == 1)){
        OnRev(motorDireita,50);
        OnFwd(motorEsquerda,50);
        Wait(1200);
     }
     else if ((robo == 0) && (ultimoLado == 0)){
        OnRev(motorEsquerda,50);
        OnFwd(motorDireita,50);
        Wait(1200);
     }
     else if ((robo == 1) && (ultimoLado == 0)){
        OnRev(motorEsquerda,80);
        Off(motorDireita);
        Wait(2500);
        ultimoLado = 1;
     }
     else if ((robo == 1) && (ultimoLado == 1)){
        OnRev(motorDireita,80);
        Off(motorEsquerda);
        Wait(2500);
        ultimoLado = 0;
     }

  }
}


//==============================================================================
//TASK MAIN ====================================================================

task main ()
{
  TextOut(6, LCD_LINE1, "PARK IEJUN");
  TextOut(6, LCD_LINE7, "Bateria: ");
  NumOut(55, LCD_LINE7, BatteryLevel());
  SetSensorLowspeed(IN_1);
  SetSensorLowspeed(IN_3);

  escolhaRobo();

  escolhaLado();


  TextOut(6, LCD_LINE6, "Start no botao central");
  NumOut(6, LCD_LINE7, robo, 0);



   if (lado == 1){
         ultimoLado = 0;}
   else if (lado == 2){
         ultimoLado = 1;}


  start esteira;


  until(ButtonPressed(BTNCENTER,1)){
      if (ButtonCount(BTNRIGHT, 1)){
          ClearScreen();}}



  TextOut(6, LCD_LINE4, "SHIBBBBAAAARRRR", 1);

  Wait(2000);




     for(;;){

        obtemSensores();
        OnRev(motores,30);
        busca();



     }

  }

}
